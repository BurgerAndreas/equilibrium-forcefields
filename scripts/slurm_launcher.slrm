#!/bin/bash

# Node resource configurations
# https://support.vectorinstitute.ai/Vaughan_slurm_changes
#SBATCH --job-name=equilibrium-forcefields
#SBATCH --mem=32G
#SBATCH --cpus-per-task=4
# a40, 48GB, gpu[001-015], gpu[027-056]
# rtx6000, 24GB
#SBATCH --partition=rtx6000
#SBATCH --gres=gpu:1
# sacctmgr list qos format=Name%15,Priority,MaxWall,MaxTRESPerUser normal,m,m2,m3,m4,m5,long
# --account=deadline --qos=deadline --qos=normal
#SBATCH --qos=normal
#SBATCH --time=16:00:00
#SBATCH --output=outslurm/slurm-%j.txt 
#SBATCH --error=outslurm/slurm-%j.txt
# errslurm-%j.err

# Append is important because otherwise preemption resets the file
#SBATCH --open-mode=append

echo `date`: Job $SLURM_JOB_ID is allocated resources.

# the recommendation is to keep erything that defines the workload itself in a separate script
echo "Inside slurm_launcher.slrm ($0). received arguments: $@"

HOME_DIR=/h/burgeran

# export SCRIPTDIR=${HOME_DIR}/equilibrium-forcefields/equilibrium-forcefields/train
export SCRIPTDIR=${HOME_DIR}/equilibrium-forcefields/equiformer
if [[ $1 == *"test"* ]]; then
    echo "Found test in the filename. Changing the scriptdir to equilibrium-forcefields/tests"
    export SCRIPTDIR=${HOME_DIR}/equilibrium-forcefields/tests
elif [[ $1 == *"deq"* ]]; then
    echo "Found deq in the filename. Changing the scriptdir to equilibrium-forcefields/scripts"
    export SCRIPTDIR=${HOME_DIR}/equilibrium-forcefields/scripts
fi

# hand over all arguments to the script
echo "Submitting ${SCRIPTDIR}/$@"


# V1
# ${HOME_DIR}/venv10/bin/python ${SCRIPTDIR}/"$@"

# V2 - works!
# source ${HOME_DIR}/venv10/bin/activate
# ${HOME_DIR}/venv10/bin/python ${SCRIPTDIR}/"$@"

# conda
# eval "$(mamba shell.bash hook)"
# source ${HOME_DIR}/.bashrc
CONDA_BASE=$(conda info --base) # /fs01/home/burgeran/miniforge3
source $CONDA_BASE/etc/profile.d/conda.sh
mamba activate deq
${HOME_DIR}/miniforge3/envs/deq/bin/python ${SCRIPTDIR}/"$@"

# V3
# ${HOME_DIR}/venv10/bin/accelerate-launch ${SCRIPTDIR}/"$@"

# V4
# source ~/venv10/bin/activate
# python ${SCRIPTDIR}/"$@"
# deactivate

echo `date`: "Job $SLURM_JOB_ID finished running, exit code: $?"

# date=$(date '+%Y-%m-%d')
# archive=$HOME/finished_jobs/$date/$SLURM_JOB_ID
# mkdir -p $archive

# echo archive $archive
# cp ./$SLURM_JOB_ID.out $archive/job.out
# cp ./$SLURM_JOB_ID.err $archive/job.err

# usage: 
# sbatch scripts/slurm_launcher.slrm train_deq_main_v2.py +machine=vector batch_size=16
